<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="5" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-10T18:05:44 IST" name="E-CommerceSuite" finished-at="2025-08-10T18:07:05 IST" duration-ms="81144">
    <groups>
    </groups>
    <test started-at="2025-08-10T18:05:44 IST" name="SequentialTests" finished-at="2025-08-10T18:07:05 IST" duration-ms="81144">
      <class name="test.SignUpTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.SignUpTest@16612a51]" started-at="2025-08-10T18:05:44 IST" name="setUp" finished-at="2025-08-10T18:05:47 IST" duration-ms="3536" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.SignUpTest.signUp_ExistingUser_ShouldShowExistsAlert()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="signUp_ExistingUser_ShouldShowExistsAlert()[pri:0, instance:test.SignUpTest@16612a51]" started-at="2025-08-10T18:05:47 IST" name="signUp_ExistingUser_ShouldShowExistsAlert" finished-at="2025-08-10T18:05:49 IST" duration-ms="1907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUp_ExistingUser_ShouldShowExistsAlert -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.SignUpTest@16612a51]" started-at="2025-08-10T18:05:49 IST" name="tearDown" finished-at="2025-08-10T18:05:49 IST" duration-ms="137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUp_ExistingUser_ShouldShowExistsAlert status=SUCCESS method=SignUpTest.signUp_ExistingUser_ShouldShowExistsAlert()[pri:0, instance:test.SignUpTest@16612a51] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.SignUpTest@16612a51]" started-at="2025-08-10T18:05:49 IST" name="setUp" finished-at="2025-08-10T18:05:52 IST" duration-ms="2830" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.SignUpTest.signUp_NewUser_ShouldShowSuccessAlert()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="signUp_NewUser_ShouldShowSuccessAlert()[pri:0, instance:test.SignUpTest@16612a51]" started-at="2025-08-10T18:05:52 IST" name="signUp_NewUser_ShouldShowSuccessAlert" finished-at="2025-08-10T18:05:54 IST" duration-ms="1872" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUp_NewUser_ShouldShowSuccessAlert -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.SignUpTest@16612a51]" started-at="2025-08-10T18:05:54 IST" name="tearDown" finished-at="2025-08-10T18:05:54 IST" duration-ms="127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUp_NewUser_ShouldShowSuccessAlert status=SUCCESS method=SignUpTest.signUp_NewUser_ShouldShowSuccessAlert()[pri:0, instance:test.SignUpTest@16612a51] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="flush()[pri:0, instance:test.SignUpTest@16612a51]" started-at="2025-08-10T18:07:05 IST" name="flush" finished-at="2025-08-10T18:07:05 IST" duration-ms="537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
      </class> <!-- test.SignUpTest -->
      <class name="test.LoginTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.LoginTest@238d68ff]" started-at="2025-08-10T18:05:54 IST" name="setUp" finished-at="2025-08-10T18:05:57 IST" duration-ms="3060" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.LoginTest.login_InvalidPassword_ShouldShowAlert()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login_InvalidPassword_ShouldShowAlert()[pri:0, instance:test.LoginTest@238d68ff]" started-at="2025-08-10T18:05:57 IST" name="login_InvalidPassword_ShouldShowAlert" finished-at="2025-08-10T18:05:59 IST" duration-ms="2364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_InvalidPassword_ShouldShowAlert -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.LoginTest@238d68ff]" started-at="2025-08-10T18:05:59 IST" name="tearDown" finished-at="2025-08-10T18:06:00 IST" duration-ms="176" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_InvalidPassword_ShouldShowAlert status=SUCCESS method=LoginTest.login_InvalidPassword_ShouldShowAlert()[pri:0, instance:test.LoginTest@238d68ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.LoginTest@238d68ff]" started-at="2025-08-10T18:06:00 IST" name="setUp" finished-at="2025-08-10T18:06:02 IST" duration-ms="2802" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.LoginTest.login_ValidCredentials_ShouldShowUsername()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login_ValidCredentials_ShouldShowUsername()[pri:0, instance:test.LoginTest@238d68ff]" started-at="2025-08-10T18:06:02 IST" name="login_ValidCredentials_ShouldShowUsername" finished-at="2025-08-10T18:06:09 IST" duration-ms="6600" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_ValidCredentials_ShouldShowUsername -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.LoginTest@238d68ff]" started-at="2025-08-10T18:06:09 IST" name="tearDown" finished-at="2025-08-10T18:06:09 IST" duration-ms="153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_ValidCredentials_ShouldShowUsername status=SUCCESS method=LoginTest.login_ValidCredentials_ShouldShowUsername()[pri:0, instance:test.LoginTest@238d68ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.LoginTest -->
      <class name="test.PlaceOrderTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.PlaceOrderTest@5852c06f]" started-at="2025-08-10T18:06:40 IST" name="setUp" finished-at="2025-08-10T18:06:44 IST" duration-ms="3805" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.PlaceOrderTest.placeOrder_WithValidDetails_ShouldConfirm() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="placeOrder_WithValidDetails_ShouldConfirm()[pri:0, instance:test.PlaceOrderTest@5852c06f]" started-at="2025-08-10T18:06:44 IST" name="placeOrder_WithValidDetails_ShouldConfirm" finished-at="2025-08-10T18:07:04 IST" duration-ms="20515" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.cssSelector: .sweet-alert > div > p (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 138.0.7204.184, chrome: {chromedriverVersion: 138.0.7204.183 (e90faf484dd..., userDataDir: C:\Users\cdkar\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60588}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60588/devtoo..., se:cdpVersion: 138.0.7204.184, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a6624afceaaa002df6e1f88554a3e69a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.cssSelector: .sweet-alert > div > p (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 138.0.7204.184, chrome: {chromedriverVersion: 138.0.7204.183 (e90faf484dd..., userDataDir: C:\Users\cdkar\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60588}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60588/devtoo..., se:cdpVersion: 138.0.7204.184, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a6624afceaaa002df6e1f88554a3e69a
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at util.WaitUtil.waitForVisibility(WaitUtil.java:14)
at page.PlaceOrderPage.getConfirmationDetails(PlaceOrderPage.java:44)
at test.PlaceOrderTest.placeOrder_WithValidDetails_ShouldConfirm(PlaceOrderTest.java:41)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrder_WithValidDetails_ShouldConfirm -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.PlaceOrderTest@5852c06f]" started-at="2025-08-10T18:07:04 IST" name="tearDown" finished-at="2025-08-10T18:07:05 IST" duration-ms="570" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=placeOrder_WithValidDetails_ShouldConfirm status=FAILURE method=PlaceOrderTest.placeOrder_WithValidDetails_ShouldConfirm()[pri:0, instance:test.PlaceOrderTest@5852c06f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.PlaceOrderTest -->
      <class name="test.AddToCartTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.AddToCartTest@4b86805d]" started-at="2025-08-10T18:06:09 IST" name="setUp" finished-at="2025-08-10T18:06:12 IST" duration-ms="2907" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.AddToCartTest.addAndViewCart_ShouldContainItem() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addAndViewCart_ShouldContainItem()[pri:0, instance:test.AddToCartTest@4b86805d]" started-at="2025-08-10T18:06:12 IST" name="addAndViewCart_ShouldContainItem" finished-at="2025-08-10T18:06:22 IST" duration-ms="9758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndViewCart_ShouldContainItem -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@4b86805d]" started-at="2025-08-10T18:06:22 IST" name="tearDown" finished-at="2025-08-10T18:06:23 IST" duration-ms="1696" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addAndViewCart_ShouldContainItem status=SUCCESS method=AddToCartTest.addAndViewCart_ShouldContainItem()[pri:0, instance:test.AddToCartTest@4b86805d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.AddToCartTest@4b86805d]" started-at="2025-08-10T18:06:23 IST" name="setUp" finished-at="2025-08-10T18:06:28 IST" duration-ms="4839" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.AddToCartTest.deleteProductFromCart_ShouldUpdateCartAndTotal() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="deleteProductFromCart_ShouldUpdateCartAndTotal()[pri:0, instance:test.AddToCartTest@4b86805d]" started-at="2025-08-10T18:06:28 IST" name="deleteProductFromCart_ShouldUpdateCartAndTotal" finished-at="2025-08-10T18:06:39 IST" duration-ms="11061" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.id: totalp (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 138.0.7204.184, chrome: {chromedriverVersion: 138.0.7204.183 (e90faf484dd..., userDataDir: C:\Users\cdkar\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60565}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60565/devtoo..., se:cdpVersion: 138.0.7204.184, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 328a2824fbd375411bb4f6b90683ed88]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.id: totalp (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 138.0.7204.184, chrome: {chromedriverVersion: 138.0.7204.183 (e90faf484dd..., userDataDir: C:\Users\cdkar\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60565}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60565/devtoo..., se:cdpVersion: 138.0.7204.184, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 328a2824fbd375411bb4f6b90683ed88
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at util.WaitUtil.waitForVisibility(WaitUtil.java:14)
at page.CartPage.getTotal(CartPage.java:31)
at test.AddToCartTest.deleteProductFromCart_ShouldUpdateCartAndTotal(AddToCartTest.java:36)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteProductFromCart_ShouldUpdateCartAndTotal -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@4b86805d]" started-at="2025-08-10T18:06:39 IST" name="tearDown" finished-at="2025-08-10T18:06:40 IST" duration-ms="382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteProductFromCart_ShouldUpdateCartAndTotal status=FAILURE method=AddToCartTest.deleteProductFromCart_ShouldUpdateCartAndTotal()[pri:0, instance:test.AddToCartTest@4b86805d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.AddToCartTest -->
    </test> <!-- SequentialTests -->
  </suite> <!-- E-CommerceSuite -->
</testng-results>
